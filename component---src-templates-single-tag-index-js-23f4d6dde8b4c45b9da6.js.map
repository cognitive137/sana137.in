{"version":3,"sources":["webpack:///./src/components/complexHeader.js","webpack:///./src/templates/singleTagIndex.js"],"names":["ComplexHeader","siteTitle","description","headerImg","hideName","useStaticQuery","site","siteMetadata","homeName","siteUrl","style","backgroundColor","backgroundImage","className","margin","defaultProps","TinyHeader","to","role","textTransform","href","rel","target","title","xmlns","viewBox","cx","cy","r","d","SingleTagTemplate","pageContext","cover","posts","tag","bgImg","length","desc","toUpperCase","id","map","post","key","frontmatter","path","moment","date","fromNow","excerpt"],"mappings":"uIAIMA,EAAgB,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,EAC5DC,yBAAe,cAUOC,KAAKC,aAAhCC,EAXiE,EAWjEA,SAAUC,EAXuD,EAWvDA,QAClB,OACE,4BACEC,MAAO,CACLC,gBAAgB,UAChBC,gBAAgB,OAAQT,EAAT,KAEjBU,UAAW,qBAEX,yBAAKA,UAAW,SACd,kBAAC,EAAD,CAAYL,SAAUA,EAAUC,QAASA,IACzC,yBAAKI,UAAW,uBACd,wBAAIH,MAAO,CAAEI,OAAQ,GAAKD,UAAW,cAClCZ,GAEH,6BACA,wBAAIY,UAAW,oBAAqBX,IAClCE,GAAY,4BAAKI,OAY7BR,EAAce,aAAe,CAC3Bd,UAAU,iBACVC,YAAY,kBAGCF,QAETgB,EAAa,SAAC,GAA2B,IAAzBR,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC9B,OACE,yBAAKI,UAAW,YACd,yBAAKA,UAAW,iBACd,kBAAC,OAAD,CAAMI,GAAI,IAAKJ,UAAW,iBACvBL,GAEH,wBAAIK,UAAU,MAAMK,KAAK,QACvB,wBAAIL,UAAU,aAAaK,KAAK,YAC9B,kBAAC,OAAD,CAAMD,GAAI,QAASP,MAAO,CAAES,cAAc,UAA1C,aAMN,yBAAKN,UAAW,kBACd,yBAAKA,UAAW,iBAChB,uBACEA,UAAW,aACXO,KAAI,0CAA4CX,EAA5C,WACJY,IAAI,sBACJC,OAAO,SACPC,MAAM,OAEN,yBAAKC,MAAM,6BAA6BC,QAAQ,aAC9C,4BAAQC,GAAG,OAAOC,GAAG,QAAQC,EAAE,SAC/B,0BAAMC,EAAE,2J,iCCTLC,UA9DW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACnBC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,IAEhBC,EAAwB,GAAhBH,EAAMI,OAAcJ,EAAM,GAAGA,MAAQ,GAC7CK,EAAI,SAAWJ,EAAMG,OAAS,EAAI,IAAM,IAApC,UAAgDF,EAAhD,IACV,OACE,yBAAKrB,UAAW,gBACd,yBAAKA,UAAW,gBACd,kBAAC,EAAD,CACEZ,UAAWiC,EAAII,cACfpC,YAAamC,EACbjC,UAAU,EACVD,UAAWgC,IAEb,0BAAMI,GAAI,YAAa1B,UAAW,mBAChC,yBAAKA,UAAW,SACd,yBAAKA,UAAW,aACboB,EAAMO,KAAI,SAAAC,GAAI,OACb,6BACE5B,UAAW,iBACX6B,IAAKD,EAAKE,YAAYC,MAEtB,kBAAC,OAAD,CACE3B,GAAIwB,EAAKE,YAAYC,KACrB/B,UAAW,wBAEX,yBACEA,UAAW,kBACXH,MAAO,CACLE,gBAAgB,OAAQ6B,EAAKE,YAAYX,MAA1B,QAIrB,yBAAKnB,UAAW,qBACd,kBAAC,OAAD,CACEI,GAAIwB,EAAKE,YAAYC,KACrB/B,UAAW,0BAEX,4BAAQA,UAAW,oBACjB,0BAAMA,UAAW,kBACdqB,EADH,MACWW,IAAOJ,EAAKE,YAAYG,MAAMC,WAEzC,wBAAIlC,UAAW,mBACZ4B,EAAKE,YAAYpB,QAGtB,6BAASV,UAAW,qBAClB,2BAAI4B,EAAKE,YAAYK,mBASrC,kBAAC,IAAD","file":"component---src-templates-single-tag-index-js-23f4d6dde8b4c45b9da6.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { graphql, useStaticQuery, Link } from 'gatsby';\n\nconst ComplexHeader = ({ siteTitle, description, headerImg, hideName }) => {\n  const data = useStaticQuery(graphql`\n    query getHomeNameForComplex {\n      site {\n        siteMetadata {\n          homeName\n          siteUrl\n        }\n      }\n    }\n  `);\n  const { homeName, siteUrl } = data.site.siteMetadata;\n  return (\n    <header\n      style={{\n        backgroundColor: `#86BD26`,\n        backgroundImage: `url(${headerImg})`,\n      }}\n      className={'site-header outer'}\n    >\n      <div className={'inner'}>\n        <TinyHeader homeName={homeName} siteUrl={siteUrl} />\n        <div className={'site-header-content'}>\n          <h1 style={{ margin: 0 }} className={'site-title'}>\n            {siteTitle}\n          </h1>\n          <br />\n          <h2 className={'site-description'}>{description}</h2>\n          {!hideName && <h2>{homeName}</h2>}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nComplexHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  description: PropTypes.string,\n};\n\nComplexHeader.defaultProps = {\n  siteTitle: `Sana's stories`,\n  description: `Hi, I am Sana!`,\n};\n\nexport default ComplexHeader;\n\nconst TinyHeader = ({ homeName, siteUrl }) => {\n  return (\n    <nav className={'site-nav'}>\n      <div className={'site-nav-left'}>\n        <Link to={'/'} className={'site-nav-logo'}>\n          {homeName}\n        </Link>\n        <ul className=\"nav\" role=\"menu\">\n          <li className=\"nav-weblog\" role=\"menuitem\">\n            <Link to={'/tags'} style={{ textTransform: `upper` }}>\n              Topics\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <div className={'site-nav-right'}>\n        <div className={'social-links'} />\n        <a\n          className={'rss-button'}\n          href={`https://feedly.com/i/subscription/feed/${siteUrl}/rss.xml`}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          title=\"RSS\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n            <circle cx=\"6.18\" cy=\"17.82\" r=\"2.18\"></circle>\n            <path d=\"M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56zm0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9z\"></path>\n          </svg>\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport ComplexHeader from '../components/complexHeader';\nimport Footer from '../components/footer';\nimport moment from 'moment';\n\nconst SingleTagTemplate = ({ pageContext }) => {\n  const { cover, posts, tag } = pageContext;\n  /* eslint eqeqeq: \"off\" */\n  const bgImg = cover.length == 1 ? cover[0].cover : '';\n  const desc = `Essay${posts.length > 1 ? 's' : ''} about ${tag}.`;\n  return (\n    <div className={'tag-template'}>\n      <div className={'site-wrapper'}>\n        <ComplexHeader\n          siteTitle={tag.toUpperCase()}\n          description={desc}\n          hideName={true}\n          headerImg={bgImg}\n        />\n        <main id={'site-main'} className={'site-main outer'}>\n          <div className={'inner'}>\n            <div className={'post-feed'}>\n              {posts.map(post => (\n                <article\n                  className={'post-card post'}\n                  key={post.frontmatter.path}\n                >\n                  <Link\n                    to={post.frontmatter.path}\n                    className={'post-card-image-link'}\n                  >\n                    <div\n                      className={'post-card-image'}\n                      style={{\n                        backgroundImage: `url(${post.frontmatter.cover})`,\n                      }}\n                    />\n                  </Link>\n                  <div className={'post-card-content'}>\n                    <Link\n                      to={post.frontmatter.path}\n                      className={'post-card-content-link'}\n                    >\n                      <header className={'post-card-header'}>\n                        <span className={'post-card-tags'}>\n                          {tag} â€¢ {moment(post.frontmatter.date).fromNow()}\n                        </span>\n                        <h2 className={'post-card-title'}>\n                          {post.frontmatter.title}\n                        </h2>\n                      </header>\n                      <section className={'post-card-excerpt'}>\n                        <p>{post.frontmatter.excerpt}</p>\n                      </section>\n                    </Link>\n                  </div>\n                </article>\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleTagTemplate;\n"],"sourceRoot":""}